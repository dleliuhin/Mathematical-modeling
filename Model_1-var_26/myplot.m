function myplot(P2,P4,L1,L2,J)
%Инициализируем буферные массивы для сравнения двух рядом стоящих значений
%отдельно для р2 и для р4
TEMP2=[];TEMP4=[];
%Создаем переменные-счетчики точек бифуркации Андронова-Хопфа
%Сумма точек бифуркации А.-Х. при изменении знака мнимой части собственных
%значений матрицы Якоби или определителя матрицы Якоби с - на +  
count1=0;
%Сумма точек бифуркации А.-Х. при изменении знака мнимой части собственных
%значений матрицы Якоби или определителя матрицы Якоби с + на -  
count2=0;
%Запускам цикл от 1 до длины массива значений переменных -1
%..........................................................................
for k=1:length(P2)-1
    
    %Выводим все точки, независимо от условий
    %Записываем в буферный массив два рядом стоящих значения р2
    TEMP2=[P2(k),P2(k+1)];
    %Записываем в буферный массив два рядом стоящих значения р4
    TEMP4=[P4(k),P4(k+1)];
    %Строим график попарно(то есть по паре значений р2 и р4), т.е. по 2 точки за раз
    %Для наглядности выводим данный промежуток синей линией
    plot(TEMP2,TEMP4,'b.-');
    %Команда hold on - строим новые значения поверх старых
    hold on;
    %Обнуляем буферные массивы значений р2 и р4
    TEMP2=[];TEMP4=[];    
    
%..........................................................................    
    %Проверяем две рядом стоящие точки на выполнение условия - на +
    if (imag(L1(k))<0 && imag(L1(k+1))>0) || (imag(L2(k))<0 && imag(L2(k+1))>0) || (J(k)<0 && J(k+1)>0)
        %Записываем в буферный массив два рядом стоящих значения р2
        TEMP2=[P2(k),P2(k+1)];
        %Записываем в буферный массив два рядом стоящих значения р4
        TEMP4=[P4(k),P4(k+1)];
        %Строим график попарно(то есть по паре значений р2 и р4), т.е. по 2 точки за раз
        %Для наглядности выводим данный промежуток жирной красной линией
        plot(TEMP2,TEMP4,'r','LineWidth',5);
        %Команда hold on - строим новые значения поверх старых
        hold on;    
        %Обнуляем буферные массивы значений р2 и р4
        TEMP2=[];TEMP4=[];
        %Если условие выполняется, увеличиваем счетчик на 1
        count1=count1+1; 
    end
    
%..........................................................................    
    %Проверяем две рядом стоящие точки на выполнение условия + на -
    if (imag(L1(k))>0 && imag(L1(k+1))<0) || (imag(L2(k))>0 && imag(L2(k+1))<0) || (J(k)>0 && J(k+1)<0)
        %Записываем в буферный массив два рядом стоящих значения р2
        TEMP2=[P2(k),P2(k+1)];
        %Записываем в буферный массив два рядом стоящих значения р4
        TEMP4=[P4(k),P4(k+1)];
        %Строим график попарно(то есть по паре значений р2 и р4), т.е. по 2 точки за раз
        %Для наглядности выводим данный промежуток жирной зеленой линией
        plot(TEMP2,TEMP4,'g','LineWidth',5);
        %Команда hold on - строим новые значения поверх старых
        hold on;    
        %Обнуляем буферные массивы значений р2 и р4
        TEMP2=[];TEMP4=[];
        %Если условие выполняется, увеличиваем счетчик на 1
        count2=count2+1;    
%..........................................................................        
    end
    %Размещаем текст над графиком при помощи title
    title('(p2,p4)','fontsize',15);
    %Название оси x
    xlabel('p2','fontsize',15);
    %Название оси y
    ylabel('p4 ','fontsize',15,'rotation',0); 
end
%Выводим количество точек бифуркации Андронова-Хопфа
fprintf('Количество точек бифуркации Андронова-Хопфа:  %i \n',count1+count2);
end